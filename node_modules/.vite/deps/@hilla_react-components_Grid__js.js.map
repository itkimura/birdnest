{
  "version": 3,
  "sources": ["../../@hilla/react-components/src/Grid.tsx", "../../@hilla/react-components/src/generated/Grid.ts"],
  "sourcesContent": ["import { type ComponentType, type ForwardedRef, forwardRef, type ReactElement } from 'react';\nimport { Grid as _Grid, type GridProps as _GridProps, WebComponentModule } from './generated/Grid.js';\nimport type { GridRowDetailsReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\n\nexport * from './generated/Grid.js';\n\nexport type GridProps<TItem> = Omit<_GridProps<TItem>, 'rowDetailsRenderer'> &\n  Readonly<{\n    rowDetailsRenderer?: ComponentType<GridRowDetailsReactRendererProps<TItem>> | null;\n  }>;\n\nfunction Grid<TItem = WebComponentModule.GridDefaultItem>(\n  props: GridProps<TItem>,\n  ref: ForwardedRef<WebComponentModule.Grid<TItem>>,\n): ReactElement | null {\n  const [portals, rowDetailsRenderer] = useModelRenderer(props.rowDetailsRenderer);\n\n  return (\n    <_Grid<TItem> {...props} ref={ref} rowDetailsRenderer={rowDetailsRenderer}>\n      {props.children}\n      {portals}\n    </_Grid>\n  );\n}\n\nconst ForwardedGrid = forwardRef(Grid) as <TItem = WebComponentModule.GridDefaultItem>(\n  props: GridProps<TItem> & { ref?: ForwardedRef<WebComponentModule.Grid<TItem>> },\n) => ReactElement | null;\n\nexport { ForwardedGrid as Grid, WebComponentModule };\n", "import type { EventName } from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/grid/vaadin-grid.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type GridEventMap<T1> = Readonly<{\n    onActiveItemChanged: EventName<WebComponentModule.GridEventMap<T1>[\"active-item-changed\"]>;\n    onCellActivate: EventName<WebComponentModule.GridEventMap<T1>[\"cell-activate\"]>;\n    onColumnResize: EventName<WebComponentModule.GridEventMap<T1>[\"column-resize\"]>;\n    onExpandedItemsChanged: EventName<WebComponentModule.GridEventMap<T1>[\"expanded-items-changed\"]>;\n    onLoadingChanged: EventName<WebComponentModule.GridEventMap<T1>[\"loading-changed\"]>;\n    onSelectedItemsChanged: EventName<WebComponentModule.GridEventMap<T1>[\"selected-items-changed\"]>;\n    onCellFocus: EventName<WebComponentModule.GridEventMap<T1>[\"cell-focus\"]>;\n    onColumnReorder: EventName<WebComponentModule.GridEventMap<T1>[\"column-reorder\"]>;\n    onGridDragend: EventName<WebComponentModule.GridEventMap<T1>[\"grid-dragend\"]>;\n    onGridDragstart: EventName<WebComponentModule.GridEventMap<T1>[\"grid-dragstart\"]>;\n    onGridDrop: EventName<WebComponentModule.GridEventMap<T1>[\"grid-drop\"]>;\n    onSizeChanged: EventName<CustomEvent<unknown>>;\n    onDataProviderChanged: EventName<CustomEvent<unknown>>;\n}>;\nconst events = { onActiveItemChanged: \"active-item-changed\", onCellActivate: \"cell-activate\", onColumnResize: \"column-resize\", onExpandedItemsChanged: \"expanded-items-changed\", onLoadingChanged: \"loading-changed\", onSelectedItemsChanged: \"selected-items-changed\", onCellFocus: \"cell-focus\", onColumnReorder: \"column-reorder\", onGridDragend: \"grid-dragend\", onGridDragstart: \"grid-dragstart\", onGridDrop: \"grid-drop\", onSizeChanged: \"size-changed\", onDataProviderChanged: \"data-provider-changed\" } as GridEventMap<unknown>;\nexport type GridProps<T1> = WebComponentProps<WebComponentModule.Grid<T1>, GridEventMap<T1>>;\nexport const Grid = createComponent({\n    elementClass: WebComponentModule.Grid,\n    events,\n    react: React,\n    tagName: \"vaadin-grid\"\n}) as <T1>(props: GridProps<T1> & {\n    ref?: React.ForwardedRef<WebComponentModule.Grid<T1>>;\n}) => React.ReactElement | null;\nexport { WebComponentModule };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,mBAAqF;;;ACErF,YAAuB;AADvB,YAAY,wBAAwB;AAkBpC,IAAM,SAAS,EAAE,qBAAqB,uBAAuB,gBAAgB,iBAAiB,gBAAgB,iBAAiB,wBAAwB,0BAA0B,kBAAkB,mBAAmB,wBAAwB,0BAA0B,aAAa,cAAc,iBAAiB,kBAAkB,eAAe,gBAAgB,iBAAiB,kBAAkB,YAAY,aAAa,eAAe,gBAAgB,uBAAuB,wBAAuB;AAEve,IAAMA,QAAO,gBAAgB;EAChC,cAAiC;EACjC;EACA,OAAO;EACP,SAAS;CACZ;;;ADdD,SAASC,MACP,OACA,KAAiD;AAEjD,QAAM,CAAC,SAAS,kBAAkB,IAAI,iBAAiB,MAAM,kBAAkB;AAE/E,aACE,mBAAAC,MAACD,OAAK,EAAA,GAAY,OAAO,KAAU,oBAAsC,UAAA,CACtE,MAAM,UACN,OAAO,EAAA,CAAA;AAGd;AAEA,IAAM,oBAAgB,yBAAWA,KAAI;",
  "names": ["Grid", "Grid", "_jsxs"]
}

{
  "version": 3,
  "sources": ["../../@hilla/react-components/src/GridColumn.tsx", "../../@hilla/react-components/src/generated/GridColumn.ts"],
  "sourcesContent": ["import { type ComponentType, type ForwardedRef, forwardRef, type ReactElement } from 'react';\nimport type { WebComponentModule as GridModule } from './generated/Grid.js';\nimport {\n  GridColumn as _GridColumn,\n  type GridColumnProps as _GridColumnProps,\n  WebComponentModule,\n} from './generated/GridColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleRenderer } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/GridColumn.js';\n\nexport type GridColumnProps<TItem> = Omit<\n  _GridColumnProps<TItem>,\n  'children' | 'footerRenderer' | 'headerRenderer' | 'renderer'\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridColumn<TItem = GridModule.GridDefaultItem>(\n  props: GridColumnProps<TItem>,\n  ref: ForwardedRef<WebComponentModule.GridColumn<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleRenderer(props.headerRenderer);\n  const [footerPortals, footerRenderer] = useSimpleRenderer(props.footerRenderer);\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children);\n\n  return (\n    <_GridColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridColumn>\n  );\n}\n\nconst ForwardedGridColumn = forwardRef(GridColumn) as <TItem = GridModule.GridDefaultItem>(\n  props: GridColumnProps<TItem> & { ref?: ForwardedRef<WebComponentModule.GridColumn<TItem>> },\n) => ReactElement | null;\n\nexport { ForwardedGridColumn as GridColumn, WebComponentModule };\n", "import type {} from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/grid/vaadin-grid-column.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type GridColumnEventMap = Readonly<{}>;\nconst events = {} as GridColumnEventMap;\nexport type GridColumnProps<T1> = WebComponentProps<WebComponentModule.GridColumn<T1>, GridColumnEventMap>;\nexport const GridColumn = createComponent({\n    elementClass: WebComponentModule.GridColumn,\n    events,\n    react: React,\n    tagName: \"vaadin-grid-column\"\n}) as <T1>(props: GridColumnProps<T1> & {\n    ref?: React.ForwardedRef<WebComponentModule.GridColumn<T1>>;\n}) => React.ReactElement | null;\nexport { WebComponentModule };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAqF;;;ACErF,YAAuB;AADvB,YAAY,wBAAwB;AAIpC,IAAM,SAAS,CAAA;AAER,IAAMA,cAAa,gBAAgB;EACtC,cAAiC;EACjC;EACA,OAAO;EACP,SAAS;CACZ;;;ADYD,SAASC,YACP,OACA,KAAuD;;AAEvD,QAAM,CAAC,eAAe,cAAc,IAAI,kBAAkB,MAAM,cAAc;AAC9E,QAAM,CAAC,eAAe,cAAc,IAAI,kBAAkB,MAAM,cAAc;AAC9E,QAAM,CAAC,aAAa,YAAY,IAAI,kBAAiB,WAAM,aAAN,YAAkB,MAAM,QAAQ;AAErF,aACE,mBAAAC,MAACD,aAAW,EAAA,GACN,OACJ,gBACA,gBACA,KACA,UAAU,cAAY,UAAA,CAErB,eACA,eACA,WAAW,EAAA,CAAA;AAGlB;AAEA,IAAM,0BAAsB,yBAAWA,WAAU;",
  "names": ["GridColumn", "GridColumn", "_jsxs"]
}

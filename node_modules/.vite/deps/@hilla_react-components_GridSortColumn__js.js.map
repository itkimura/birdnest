{
  "version": 3,
  "sources": ["../../@hilla/react-components/src/GridSortColumn.tsx", "../../@hilla/react-components/src/generated/GridSortColumn.ts"],
  "sourcesContent": ["import { type ComponentType, type ForwardedRef, forwardRef, type ReactElement } from 'react';\nimport type { WebComponentModule as GridModule } from './generated/Grid.js';\nimport {\n  GridSortColumn as _GridSortColumn,\n  type GridSortColumnProps as _GridSortColumnProps,\n  WebComponentModule,\n} from './generated/GridSortColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleRenderer } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/GridSortColumn.js';\n\nexport type GridSortColumnProps<TItem> = Omit<\n  _GridSortColumnProps<TItem>,\n  'children' | 'footerRenderer' | 'headerRenderer' | 'renderer'\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridSortColumn<TItem = GridModule.GridDefaultItem>(\n  props: GridSortColumnProps<TItem>,\n  ref: ForwardedRef<WebComponentModule.GridSortColumn<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleRenderer(props.headerRenderer);\n  const [footerPortals, footerRenderer] = useSimpleRenderer(props.footerRenderer);\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children);\n\n  return (\n    <_GridSortColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridSortColumn>\n  );\n}\n\nconst ForwardedGridSortColumn = forwardRef(GridSortColumn) as <TItem = GridModule.GridDefaultItem>(\n  props: GridSortColumnProps<TItem> & { ref?: ForwardedRef<WebComponentModule.GridSortColumn<TItem>> },\n) => ReactElement | null;\n\nexport { ForwardedGridSortColumn as GridSortColumn, WebComponentModule };\n", "import type { EventName } from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/grid/vaadin-grid-sort-column.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type GridSortColumnEventMap = Readonly<{\n    onDirectionChanged: EventName<WebComponentModule.GridSortColumnEventMap[\"direction-changed\"]>;\n}>;\nconst events = { onDirectionChanged: \"direction-changed\" } as GridSortColumnEventMap;\nexport type GridSortColumnProps<T1> = WebComponentProps<WebComponentModule.GridSortColumn<T1>, GridSortColumnEventMap>;\nexport const GridSortColumn = createComponent({\n    elementClass: WebComponentModule.GridSortColumn,\n    events,\n    react: React,\n    tagName: \"vaadin-grid-sort-column\"\n}) as <T1>(props: GridSortColumnProps<T1> & {\n    ref?: React.ForwardedRef<WebComponentModule.GridSortColumn<T1>>;\n}) => React.ReactElement | null;\nexport { WebComponentModule };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAqF;;;ACErF,YAAuB;AADvB,YAAY,wBAAwB;AAMpC,IAAM,SAAS,EAAE,oBAAoB,oBAAmB;AAEjD,IAAMA,kBAAiB,gBAAgB;EAC1C,cAAiC;EACjC;EACA,OAAO;EACP,SAAS;CACZ;;;ADUD,SAASC,gBACP,OACA,KAA2D;;AAE3D,QAAM,CAAC,eAAe,cAAc,IAAI,kBAAkB,MAAM,cAAc;AAC9E,QAAM,CAAC,eAAe,cAAc,IAAI,kBAAkB,MAAM,cAAc;AAC9E,QAAM,CAAC,aAAa,YAAY,IAAI,kBAAiB,WAAM,aAAN,YAAkB,MAAM,QAAQ;AAErF,aACE,mBAAAC,MAACD,iBAAe,EAAA,GACV,OACJ,gBACA,gBACA,KACA,UAAU,cAAY,UAAA,CAErB,eACA,eACA,WAAW,EAAA,CAAA;AAGlB;AAEA,IAAM,8BAA0B,yBAAWA,eAAc;",
  "names": ["GridSortColumn", "GridSortColumn", "_jsxs"]
}
